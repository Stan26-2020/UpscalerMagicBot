import os
import logging
import threading
import time
from queue import Queue
from telegram import Update
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackContext
)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–¥–∞–π—Ç–µ BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render")

# --- –û—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á ---
task_queue = Queue()

# --- –í–æ—Ä–∫–µ—Ä—ã ---
def worker():
    while True:
        try:
            update, context = task_queue.get()
            file = update.message.photo[-1].get_file()
            
            update.message.reply_text("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
            time.sleep(2)  # –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
            update.message.reply_text("‚úÖ –ì–æ—Ç–æ–≤–æ!")
            task_queue.task_done()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞: {e}")
            update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üì∏ –ë–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!"
    )

def handle_photo(update: Update, context: CallbackContext):
    task_queue.put((update, context))
    update.message.reply_text("üì• –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å")

# --- –ó–∞–ø—É—Å–∫ ---
def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º 3 –≤–æ—Ä–∫–µ—Ä–∞
    for _ in range(3):
        threading.Thread(target=worker, daemon=True).start()

    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.photo, handle_photo))
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
